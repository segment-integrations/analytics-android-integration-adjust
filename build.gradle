buildscript {
  repositories {
    mavenCentral()
    jcenter()
    google()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:4.0.0'
    classpath 'com.f2prateek.javafmt:javafmt:0.1.6'
    classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0'
  }
}

// Use -Prelease or $ORG_GRADLE_PROJECT_RELEASE="true" to mark the project as a release
ext.isRelease = hasProperty('release')

apply plugin: 'com.android.library'
apply plugin: 'com.f2prateek.javafmt'

android {
  compileSdkVersion 33
  buildToolsVersion '29.0.2'

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 33
    compileSdkVersion 23
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    // Okio https://cloudup.com/cp7bi10o2C3g
    disable 'InvalidPackage'
    abortOnError false
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }
}

dependencies {
  repositories {
    mavenCentral()
    jcenter()
    google()
  }

  // update
  compileOnly 'com.segment.analytics.android:analytics:4.10.0'

  api 'com.adjust.sdk:adjust-android:4.33.3'

  testImplementation 'junit:junit:4.13.2'
  testImplementation('org.robolectric:robolectric:4.7.3') {
    exclude group: 'commons-logging', module: 'commons-logging'
    exclude group: 'org.apache.httpcomponents', module: 'httpclient'
  }

  testImplementation 'com.segment.analytics.android:analytics-tests:4.0.0'

  testImplementation 'org.assertj:assertj-core:2.6.0'

  def powerMockVersion = '2.0.9'
  testImplementation "org.powermock:powermock-core:$powerMockVersion"
  testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
  testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
  testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
  testImplementation "org.powermock:powermock-classloading-xstream:$powerMockVersion"
}

repositories {
  mavenCentral()
  jcenter()
  google()
}

apply from: rootProject.file('gradle/upload.gradle')
apply from: rootProject.file('gradle/sign.gradle')
apply from: rootProject.file('gradle/promote.gradle')
